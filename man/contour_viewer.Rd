% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contour_viewer.r
\name{contour_viewer}
\alias{contour_viewer}
\alias{contour_slider}
\alias{raster_select}
\alias{cv_map_ui}
\alias{cv_map_server}
\title{Contour Viewer App}
\usage{
contour_slider(
  inputId,
  label = "Contour Level:",
  min = 0.05,
  max = 0.95,
  value = 0.9,
  step = 0.05,
  ...
)

raster_select(inputId, raster_paths, label = "Raster File:", ...)

cv_map_ui(
  id,
  title = "Contour Viewer",
  r_input = TRUE,
  c_input = FALSE,
  raster_paths = NULL
)

cv_map_server(
  id,
  sr = NULL,
  hu = NULL,
  rct_r = NULL,
  rct_c = NULL,
  cache_dir = NULL
)

contour_viewer(raster_paths, sr = NULL, hu = NULL, cache_dir = NULL)
}
\arguments{
\item{inputId}{id of the \code{shiny} input, namespaced if needed}

\item{label}{label for the \code{shiny} input}

\item{min}{minimum slider value}

\item{max}{maximum slider value}

\item{value}{initial slider value}

\item{step}{interval between allowable slider values}

\item{...}{other arguments passed to \code{shiny} input function}

\item{raster_paths}{full paths to raster files to be selected}

\item{id}{\code{shiny} module id for connecting ui and server functions}

\item{title}{title for \code{shinydashboard::box}}

\item{r_input}{logical specifying whether to include an input for selecting a
raster file}

\item{c_input}{logical specifying whether to include an input for selecting a
contour level}

\item{sr}{\code{sf} object containing seasonal range polygons}

\item{hu}{\code{sf} object containing herd unit polygons}

\item{rct_r}{\code{shiny} reactive expression for passing selected raster
into module}

\item{rct_c}{\code{shiny} reactive expression for passing selected contour
level into module}

\item{cache_dir}{a directory for saving contour polygons as they are
generated. If \code{cache_dir} is provided each contour polygon displayed
is saved as a geojson file in \code{cache_dir} so it can be rendered more
quickly in the future.}
}
\value{
\code{shiny::sliderInput}

\code{shiny::selectInput}

\code{shinydashboard::box}

\code{shiny::moduleServer}

\code{shiny::shinyApp}
}
\description{
A \code{shiny} app and components for comparing rasters at
  different contour levels
}
\section{Functions}{
\itemize{
\item \code{contour_slider()}: Wrapper for a slider input for selecting a contour
value from 0 to 1. Just \code{shiny::sliderInput} with helpful default
arguments.

\item \code{raster_select()}: Wrapper for a select input for selecting a raster
file to view. Just \code{shiny::selectInput} with helpful default arguments.

\item \code{cv_map_ui()}: UI definition consisting of a
\code{shinydashboard::box} containing a \code{leaflet} map and optional
\code{shiny} inputs for a \code{shiny} module, paired with
\code{cv_map_server}

\item \code{cv_map_server()}: Server function for a \code{shiny} module, paired
with \code{cv_map_ui}

\item \code{contour_viewer()}: \code{shiny} app for comparing UD rasters

}}
\examples{
\dontrun{

devtools::install_github("https://github.com/WyoGFD/sr.utils")
library(sr.utils)

raster_paths <- list.files(
  "M:/datacrunch/Newkirk/Sublette Pronghorn/output",
  pattern = "_avg_(core|full).tif",
  full.names = TRUE
)

sr <- wgfd_agol_data("Antelope_Seasonal_Range")

hu <- wgfd_agol_data("AntelopeHerdUnits")

td <- tempdir()

contour_viewer(raster_paths, sr, hu, td)
}

}
\seealso{
shiny::sliderInput

shiny::selectInput
}
